{"ast":null,"code":"var _jsxFileName = \"/Users/themislee/Documents/redo/src/Login.js\";\nimport Login from 'ant-design-pro/lib/Login';\nimport { Alert, Checkbox } from 'antd';\nimport React from \"react\"; // import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nimport ReactDOM from 'react-dom';\nconst {\n  Tab,\n  UserName,\n  Password,\n  Mobile,\n  Captcha,\n  Submit\n} = Login;\n\nclass LoginDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notice: '',\n      type: 'tab2',\n      autoLogin: true\n    };\n\n    this.onSubmit = (err, values) => {\n      console.log('value collected ->', { ...values,\n        autoLogin: this.state.autoLogin\n      });\n\n      if (this.state.type === 'tab1') {\n        this.setState({\n          notice: ''\n        }, () => {\n          if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n            setTimeout(() => {\n              this.setState({\n                notice: 'The combination of username and password is incorrect!'\n              });\n            }, 500);\n          }\n        });\n      }\n    };\n\n    this.onTabChange = key => {\n      this.setState({\n        type: key\n      });\n    };\n\n    this.changeAutoLogin = e => {\n      this.setState({\n        autoLogin: e.target.checked\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-warp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Login, {\n      defaultActiveKey: this.state.type,\n      onTabChange: this.onTabChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      key: \"tab1\",\n      tab: \"Account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.notice && React.createElement(Alert, {\n      style: {\n        marginBottom: 24\n      },\n      message: this.state.notice,\n      type: \"error\",\n      showIcon: true,\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(UserName, {\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Password, {\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      key: \"tab2\",\n      tab: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Mobile, {\n      name: \"mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Captcha, {\n      onGetCaptcha: () => console.log('Get captcha!'),\n      name: \"captcha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.autoLogin,\n      onChange: this.changeAutoLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Keep me logged in\"), React.createElement(\"a\", {\n      style: {\n        float: 'right'\n      },\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Forgot password\")), React.createElement(Submit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Other login methods\", React.createElement(\"span\", {\n      className: \"icon icon-alipay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-taobao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-weibo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      style: {\n        float: 'right'\n      },\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\n\nReactDOM.render(React.createElement(LoginDemo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), mountNode);\nexport default LoginD; // import ReactDOM from 'react-dom';\n// import React, { useState } from \"react\";\n// import {Form, Icon, Input, Button, Checkbox, Row, Col } from \"antd\";\n//\n// class NormalLoginForm extends React.Component {\n//   const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldValue,\n//       isFieldTouched\n//   } = props.form;\n//\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         console.log('Received values of form: ', values);\n//       }\n//     });\n//   };\n//   // const {\n//   //     getFieldDecorator,\n//   //     getFieldsError,\n//   //     getFieldValue,\n//   //     isFieldTouched\n//   // } = props.form;\n//\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//         <Form.Item>\n//           {getFieldDecorator('username', {\n//             rules: [{ required: true, message: 'Please input your username!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               placeholder=\"Username\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('password', {\n//             rules: [{ required: true, message: 'Please input your Password!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               type=\"password\"\n//               placeholder=\"Password\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('remember', {\n//             valuePropName: 'checked',\n//             initialValue: true,\n//           })(<Checkbox>Remember me</Checkbox>)}\n//           <a className=\"login-form-forgot\" href=\"\">\n//             Forgot password\n//           </a>\n//           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//             Log in\n//           </Button>\n//           Or <a href=\"\">register now!</a>\n//         </Form.Item>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n//\n// // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// export default NormalLoginForm;\n// //\n// // const LoginForm = props => {\n// //   const defaultEmail = \"\";\n// //   const defaultPassword = \"\";\n// //   const [email, setEmail] = useState(defaultEmail);\n// //   const [password, setPassword] = useState(defaultPassword);\n// //\n// //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n// //\n// //   const {\n// //     getFieldDecorator,\n// //     getFieldsError,\n// //     getFieldValue,\n// //     isFieldTouched\n// //   } = props.form;\n// //\n// //   function hasErrors(fieldsError) {\n// //     return Object.keys(fieldsError).some(field => fieldsError[field]);\n// //   }\n// //\n// //   const isLoginButtonDisabled =\n// //     hasErrors(getFieldsError()) ||\n// //     !isFieldTouched(\"email\") ||\n// //     !isFieldTouched(\"password\");\n// //\n// //   const onSubmit = (email, password) => {\n// //     setEmail(email);\n// //     setPassword(password);\n// //     setIsLoggedIn(true);\n// //     console.log(email, password, isLoggedIn);\n// //   };\n// //\n// //   const loginHeader = isLoggedIn ? (\n// //     <h1 className=\"title\">Welcome Back</h1>\n// //   ) : (\n// //     <h1 className=\"title\">Log In/Sign Up Page</h1>\n// //   );\n// //\n// //   return (\n// //     <div>\n// //       <style jsx={true}>{`\n// //         .title {\n// //           font-size: 50px;\n// //           letter-spacing: normal;\n// //           color: rgba(0, 0, 0, 0.85);\n// //           margin: auto;\n// //           text-align: center;\n// //         }\n// //       `}</style>\n// //       <Row type=\"flex\" justify=\"center\">\n// //         <Col span={4} style={{ minWidth: \"320px\" }}>\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <div className=\"title\">{loginHeader}</div>\n// //           <br />\n// //           <br />\n// //           <Form\n// //             // {...formProps}\n// //             // className=\"login-form\"\n// //             // layout={\"\"}\n// //             // tslint:disable-next-line jsx-no-lambda\n// //             onSubmit={evt => {\n// //               if (!isLoginButtonDisabled) {\n// //                 // setLoading(true);\n// //                 evt.preventDefault();\n// //                 onSubmit(email, password);\n// //               }\n// //             }}\n// //           >\n// //             <Form.Item label=\"Username\">\n// //               {getFieldDecorator(\"username\", {\n// //                 rules: [\n// //                   {\n// //                     required: true,\n// //                     message: \"username\"\n// //                   }\n// //                   // ,{\n// //                   //   type: \"username\",\n// //                   //   message: \"The input is not valid email!\"\n// //                   // }\n// //                 ]\n// //                 // initialValue: defaultEmail\n// //               })(\n// //                 <Input\n// //\n// //                   placeholder=\"username\"\n// //                   size=\"large\"\n// //                   // onChange={handleEmailChange}\n// //                 />\n// //               )}\n// //             </Form.Item>\n// //             <Form.Item label=\"Password\">\n// //               {getFieldDecorator(\"password\", {\n// //                 rules: [\n// //                   {\n// //                     required: true,\n// //                     message: \"password\"\n// //                   }\n// //                 ]\n// //                 // initialValue: defaultPassword\n// //               })(\n// //                 <Input\n// //\n// //                   type=\"password\"\n// //                   placeholder=\"Password\"\n// //                   size=\"large\"\n// //                   // onChange={handlePasswordChange}\n// //                 />\n// //               )}\n// //             </Form.Item>\n// //             <br />\n// //             <Form.Item>\n// //               <Button\n// //                 type=\"primary\"\n// //                 htmlType=\"submit\"\n// //                 disabled={\n// //                   hasErrors(getFieldsError()) ||\n// //                   !isFieldTouched(\"username\") ||\n// //                   !isFieldTouched(\"password\")\n// //                 }\n// //                 block={true}\n// //                 // loading={loading}\n// //                 size={\"large\"}\n// //                 // tslint:disable-next-line jsx-no-lambda\n// //                 onClick={evt => {\n// //                   // setLoading(true);\n// //                   evt.preventDefault();\n// //                   // onSubmit(email, password);\n// //                   onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n// //                 }}\n// //               >\n// //                 Log in\n// //               </Button>\n// //             </Form.Item>\n// //           </Form>\n// //         </Col>\n// //       </Row>\n// //       {/* <Link to=\"/register\">Sign Up</ Link>\n// //       {/* <br />\n// //       <br />\n// //       Or <a href=\"/register\">register now!</a> */}\n// //     </div>\n// //   );\n// // };\n// //\n// // const WrappedNormalLoginForm = Form.create({ name: \"login\" })(LoginForm);\n// //\n// export default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/themislee/Documents/redo/src/Login.js"],"names":["Login","Alert","Checkbox","React","ReactDOM","Tab","UserName","Password","Mobile","Captcha","Submit","LoginDemo","Component","state","notice","type","autoLogin","onSubmit","err","values","console","log","setState","username","password","setTimeout","onTabChange","key","changeAutoLogin","e","target","checked","render","marginBottom","float","mountNode","LoginD"],"mappings":"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":["import Login from 'ant-design-pro/lib/Login';\nimport { Alert, Checkbox } from 'antd';\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nconst { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\n\nclass LoginDemo extends React.Component {\n// export default function Login() {\n  state = {\n    notice: '',\n    type: 'tab2',\n    autoLogin: true,\n  };\n  onSubmit = (err, values) => {\n    console.log('value collected ->', {\n      ...values,\n      autoLogin: this.state.autoLogin,\n    });\n    if (this.state.type === 'tab1') {\n      this.setState(\n        {\n          notice: '',\n        },\n        () => {\n          if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n            setTimeout(() => {\n              this.setState({\n                notice: 'The combination of username and password is incorrect!',\n              });\n            }, 500);\n          }\n        }\n      );\n    }\n  };\n  onTabChange = key => {\n    this.setState({\n      type: key,\n    });\n  };\n  changeAutoLogin = e => {\n    this.setState({\n      autoLogin: e.target.checked,\n    });\n  };\n  render() {\n    return (\n      <div className=\"login-warp\">\n        <Login\n          defaultActiveKey={this.state.type}\n          onTabChange={this.onTabChange}\n          onSubmit={this.onSubmit}\n        >\n          <Tab key=\"tab1\" tab=\"Account\">\n            {this.state.notice && (\n              <Alert\n                style={{ marginBottom: 24 }}\n                message={this.state.notice}\n                type=\"error\"\n                showIcon\n                closable\n              />\n            )}\n            <UserName name=\"username\" />\n            <Password name=\"password\" />\n          </Tab>\n          <Tab key=\"tab2\" tab=\"Mobile\">\n            <Mobile name=\"mobile\" />\n            <Captcha onGetCaptcha={() => console.log('Get captcha!')} name=\"captcha\" />\n          </Tab>\n          <div>\n            <Checkbox checked={this.state.autoLogin} onChange={this.changeAutoLogin}>\n              Keep me logged in\n            </Checkbox>\n            <a style={{ float: 'right' }} href=\"\">\n              Forgot password\n            </a>\n          </div>\n          <Submit>Login</Submit>\n          <div>\n            Other login methods\n            <span className=\"icon icon-alipay\" />\n            <span className=\"icon icon-taobao\" />\n            <span className=\"icon icon-weibo\" />\n            <a style={{ float: 'right' }} href=\"\">\n              Register\n            </a>\n          </div>\n        </Login>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<LoginDemo />, mountNode);\nexport default LoginD;\n// import ReactDOM from 'react-dom';\n// import React, { useState } from \"react\";\n// import {Form, Icon, Input, Button, Checkbox, Row, Col } from \"antd\";\n//\n// class NormalLoginForm extends React.Component {\n//   const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldValue,\n//       isFieldTouched\n//   } = props.form;\n//\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         console.log('Received values of form: ', values);\n//       }\n//     });\n//   };\n//   // const {\n//   //     getFieldDecorator,\n//   //     getFieldsError,\n//   //     getFieldValue,\n//   //     isFieldTouched\n//   // } = props.form;\n//\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//         <Form.Item>\n//           {getFieldDecorator('username', {\n//             rules: [{ required: true, message: 'Please input your username!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               placeholder=\"Username\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('password', {\n//             rules: [{ required: true, message: 'Please input your Password!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               type=\"password\"\n//               placeholder=\"Password\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('remember', {\n//             valuePropName: 'checked',\n//             initialValue: true,\n//           })(<Checkbox>Remember me</Checkbox>)}\n//           <a className=\"login-form-forgot\" href=\"\">\n//             Forgot password\n//           </a>\n//           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//             Log in\n//           </Button>\n//           Or <a href=\"\">register now!</a>\n//         </Form.Item>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n//\n// // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// export default NormalLoginForm;\n// //\n// // const LoginForm = props => {\n// //   const defaultEmail = \"\";\n// //   const defaultPassword = \"\";\n// //   const [email, setEmail] = useState(defaultEmail);\n// //   const [password, setPassword] = useState(defaultPassword);\n// //\n// //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n// //\n// //   const {\n// //     getFieldDecorator,\n// //     getFieldsError,\n// //     getFieldValue,\n// //     isFieldTouched\n// //   } = props.form;\n// //\n// //   function hasErrors(fieldsError) {\n// //     return Object.keys(fieldsError).some(field => fieldsError[field]);\n// //   }\n// //\n// //   const isLoginButtonDisabled =\n// //     hasErrors(getFieldsError()) ||\n// //     !isFieldTouched(\"email\") ||\n// //     !isFieldTouched(\"password\");\n// //\n// //   const onSubmit = (email, password) => {\n// //     setEmail(email);\n// //     setPassword(password);\n// //     setIsLoggedIn(true);\n// //     console.log(email, password, isLoggedIn);\n// //   };\n// //\n// //   const loginHeader = isLoggedIn ? (\n// //     <h1 className=\"title\">Welcome Back</h1>\n// //   ) : (\n// //     <h1 className=\"title\">Log In/Sign Up Page</h1>\n// //   );\n// //\n// //   return (\n// //     <div>\n// //       <style jsx={true}>{`\n// //         .title {\n// //           font-size: 50px;\n// //           letter-spacing: normal;\n// //           color: rgba(0, 0, 0, 0.85);\n// //           margin: auto;\n// //           text-align: center;\n// //         }\n// //       `}</style>\n// //       <Row type=\"flex\" justify=\"center\">\n// //         <Col span={4} style={{ minWidth: \"320px\" }}>\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <br />\n// //           <div className=\"title\">{loginHeader}</div>\n// //           <br />\n// //           <br />\n// //           <Form\n// //             // {...formProps}\n// //             // className=\"login-form\"\n// //             // layout={\"\"}\n// //             // tslint:disable-next-line jsx-no-lambda\n// //             onSubmit={evt => {\n// //               if (!isLoginButtonDisabled) {\n// //                 // setLoading(true);\n// //                 evt.preventDefault();\n// //                 onSubmit(email, password);\n// //               }\n// //             }}\n// //           >\n// //             <Form.Item label=\"Username\">\n// //               {getFieldDecorator(\"username\", {\n// //                 rules: [\n// //                   {\n// //                     required: true,\n// //                     message: \"username\"\n// //                   }\n// //                   // ,{\n// //                   //   type: \"username\",\n// //                   //   message: \"The input is not valid email!\"\n// //                   // }\n// //                 ]\n// //                 // initialValue: defaultEmail\n// //               })(\n// //                 <Input\n// //\n// //                   placeholder=\"username\"\n// //                   size=\"large\"\n// //                   // onChange={handleEmailChange}\n// //                 />\n// //               )}\n// //             </Form.Item>\n// //             <Form.Item label=\"Password\">\n// //               {getFieldDecorator(\"password\", {\n// //                 rules: [\n// //                   {\n// //                     required: true,\n// //                     message: \"password\"\n// //                   }\n// //                 ]\n// //                 // initialValue: defaultPassword\n// //               })(\n// //                 <Input\n// //\n// //                   type=\"password\"\n// //                   placeholder=\"Password\"\n// //                   size=\"large\"\n// //                   // onChange={handlePasswordChange}\n// //                 />\n// //               )}\n// //             </Form.Item>\n// //             <br />\n// //             <Form.Item>\n// //               <Button\n// //                 type=\"primary\"\n// //                 htmlType=\"submit\"\n// //                 disabled={\n// //                   hasErrors(getFieldsError()) ||\n// //                   !isFieldTouched(\"username\") ||\n// //                   !isFieldTouched(\"password\")\n// //                 }\n// //                 block={true}\n// //                 // loading={loading}\n// //                 size={\"large\"}\n// //                 // tslint:disable-next-line jsx-no-lambda\n// //                 onClick={evt => {\n// //                   // setLoading(true);\n// //                   evt.preventDefault();\n// //                   // onSubmit(email, password);\n// //                   onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n// //                 }}\n// //               >\n// //                 Log in\n// //               </Button>\n// //             </Form.Item>\n// //           </Form>\n// //         </Col>\n// //       </Row>\n// //       {/* <Link to=\"/register\">Sign Up</ Link>\n// //       {/* <br />\n// //       <br />\n// //       Or <a href=\"/register\">register now!</a> */}\n// //     </div>\n// //   );\n// // };\n// //\n// // const WrappedNormalLoginForm = Form.create({ name: \"login\" })(LoginForm);\n// //\n// export default WrappedNormalLoginForm;\n"]},"metadata":{},"sourceType":"module"}