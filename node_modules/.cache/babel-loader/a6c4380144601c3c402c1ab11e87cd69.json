{"ast":null,"code":"var _jsxFileName = \"/Users/themislee/Documents/redo/src/Login.js\";\n// // import Login from 'ant-design-pro/lib/Login';\n// import { Alert, Checkbox} from 'antd';\n// import React from \"react\";\n// // import {\n// //   BrowserRouter as Router,\n// //   Switch,\n// //   Route,\n// //   Link\n// // } from \"react-router-dom\";\n// import ReactDOM from 'react-dom';\n// const { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\n//\n// class LoginDemo extends React.Component {\n// // export default function Login() {\n//   state = {\n//     notice: '',\n//     type: 'tab2',\n//     autoLogin: true,\n//   };\n//   onSubmit = (err, values) => {\n//     console.log('value collected ->', {\n//       ...values,\n//       autoLogin: this.state.autoLogin,\n//     });\n//     if (this.state.type === 'tab1') {\n//       this.setState(\n//         {\n//           notice: '',\n//         },\n//         () => {\n//           if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n//             setTimeout(() => {\n//               this.setState({\n//                 notice: 'The combination of username and password is incorrect!',\n//               });\n//             }, 500);\n//           }\n//         }\n//       );\n//     }\n//   };\n//   onTabChange = key => {\n//     this.setState({\n//       type: key,\n//     });\n//   };\n//   changeAutoLogin = e => {\n//     this.setState({\n//       autoLogin: e.target.checked,\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className=\"login-warp\">\n//         <Login\n//           defaultActiveKey={this.state.type}\n//           onTabChange={this.onTabChange}\n//           onSubmit={this.onSubmit}\n//         >\n//           <Tab key=\"tab1\" tab=\"Account\">\n//             {this.state.notice && (\n//               <Alert\n//                 style={{ marginBottom: 24 }}\n//                 message={this.state.notice}\n//                 type=\"error\"\n//                 showIcon\n//                 closable\n//               />\n//             )}\n//             <UserName name=\"username\" />\n//             <Password name=\"password\" />\n//           </Tab>\n//           <Tab key=\"tab2\" tab=\"Mobile\">\n//             <Mobile name=\"mobile\" />\n//             <Captcha onGetCaptcha={() => console.log('Get captcha!')} name=\"captcha\" />\n//           </Tab>\n//           <div>\n//             <Checkbox checked={this.state.autoLogin} onChange={this.changeAutoLogin}>\n//               Keep me logged in\n//             </Checkbox>\n//             <a style={{ float: 'right' }} href=\"\">\n//               Forgot password\n//             </a>\n//           </div>\n//           <Submit>Login</Submit>\n//           <div>\n//             Other login methods\n//             <span className=\"icon icon-alipay\" />\n//             <span className=\"icon icon-taobao\" />\n//             <span className=\"icon icon-weibo\" />\n//             <a style={{ float: 'right' }} href=\"\">\n//               Register\n//             </a>\n//           </div>\n//         </Login>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<LoginDemo />);\n// export default LoginDemo;\nimport ReactDOM from 'react-dom';\nimport React, { useState } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, Row, Col } from \"antd\"; //\n// class NormalLoginForm extends React.Component {\n//   const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldValue,\n//       isFieldTouched\n//   } = props.form;\n//\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         console.log('Received values of form: ', values);\n//       }\n//     });\n//   };\n//   // const {\n//   //     getFieldDecorator,\n//   //     getFieldsError,\n//   //     getFieldValue,\n//   //     isFieldTouched\n//   // } = props.form;\n//\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//         <Form.Item>\n//           {getFieldDecorator('username', {\n//             rules: [{ required: true, message: 'Please input your username!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               placeholder=\"Username\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('password', {\n//             rules: [{ required: true, message: 'Please input your Password!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               type=\"password\"\n//               placeholder=\"Password\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('remember', {\n//             valuePropName: 'checked',\n//             initialValue: true,\n//           })(<Checkbox>Remember me</Checkbox>)}\n//           <a className=\"login-form-forgot\" href=\"\">\n//             Forgot password\n//           </a>\n//           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//             Log in\n//           </Button>\n//           Or <a href=\"\">register now!</a>\n//         </Form.Item>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n//\n// // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// export default NormalLoginForm;\n// //\n\nconst LoginForm = props => {\n  const defaultEmail = \"\";\n  const defaultPassword = \"\";\n  const [email, setEmail] = useState(defaultEmail);\n  const [password, setPassword] = useState(defaultPassword);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const {\n    getFieldDecorator,\n    getFieldsError,\n    getFieldValue,\n    isFieldTouched\n  } = props.form;\n\n  function hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\n  const isLoginButtonDisabled = hasErrors(getFieldsError()) || !isFieldTouched(\"email\") || !isFieldTouched(\"password\");\n\n  const onSubmit = (email, password) => {\n    setEmail(email);\n    setPassword(password);\n    setIsLoggedIn(true);\n    console.log(email, password, isLoggedIn);\n  };\n\n  const loginHeader = isLoggedIn ? React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Welcome Back\") : React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Log In/Sign Up Page\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"style\", {\n    jsx: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, `\n        .title {\n          font-size: 50px;\n          letter-spacing: normal;\n          color: rgba(0, 0, 0, 0.85);\n          margin: auto;\n          text-align: center;\n        }\n      `), React.createElement(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 4,\n    style: {\n      minWidth: \"320px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"helllo\")), React.createElement(Col, {\n    span: 4,\n    style: {\n      minWidth: \"320px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"helllo2\")))) // <Row type=\"flex\" justify=\"center\">\n  //   <Col span={4} style={{ minWidth: \"320px\" }}>\n  //     <br />\n  // <br />\n  // <br />\n  // <br />\n  // <br />\n  // <div className=\"title\">{loginHeader}</div>\n  // <br />\n  // <br />\n  // <Form\n  //   // {...formProps}\n  //   // className=\"login-form\"\n  //   // layout={\"\"}\n  //   // tslint:disable-next-line jsx-no-lambda\n  //   onSubmit={evt => {\n  //     if (!isLoginButtonDisabled) {\n  //       // setLoading(true);\n  //       evt.preventDefault();\n  //       onSubmit(email, password);\n  //     }\n  //   }}\n  // >\n  //   <Form.Item label=\"Username\">\n  //     {getFieldDecorator(\"username\", {\n  //       rules: [\n  //         {\n  //           required: true,\n  //           message: \"username\"\n  //         }\n  //         // ,{\n  //         //   type: \"username\",\n  //         //   message: \"The input is not valid email!\"\n  //         // }\n  //       ]\n  //       // initialValue: defaultEmail\n  //     })(\n  //       <Input\n  //\n  //         placeholder=\"username\"\n  //         size=\"large\"\n  //         // onChange={handleEmailChange}\n  //       />\n  //     )}\n  //   </Form.Item>\n  //   <Form.Item label=\"Password\">\n  //     {getFieldDecorator(\"password\", {\n  //       rules: [\n  //         {\n  //           required: true,\n  //           message: \"password\"\n  //         }\n  //       ]\n  //       // initialValue: defaultPassword\n  //     })(\n  //       <Input\n  //\n  //         type=\"password\"\n  //         placeholder=\"Password\"\n  //         size=\"large\"\n  //         // onChange={handlePasswordChange}\n  //       />\n  //     )}\n  //   </Form.Item>\n  //   <br />\n  //   <Form.Item>\n  //     <Button\n  //       type=\"primary\"\n  //       htmlType=\"submit\"\n  //       disabled={\n  //         hasErrors(getFieldsError()) ||\n  //         !isFieldTouched(\"username\") ||\n  //         !isFieldTouched(\"password\")\n  //       }\n  //       block={true}\n  //       // loading={loading}\n  //       size={\"large\"}\n  //       // tslint:disable-next-line jsx-no-lambda\n  //       onClick={evt => {\n  //         // setLoading(true);\n  //         evt.preventDefault();\n  //         // onSubmit(email, password);\n  //         onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n  //       }}\n  //     >\n  //       Log in\n  //     </Button>\n  //   </Form.Item>\n  // </Form>\n  //     </Col>\n  // </Row>\n  // {/* <Link to=\"/register\">Sign Up</ Link>\n  //  {/* <br />\n  //  <br />\n  //    Or <a href=\"/register\">register now!</a> */}\n  //  </div>\n  ;\n};\n\nconst WrappedNormalLoginForm = Form.create({\n  name: \"login\"\n})(LoginForm); //\n\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/themislee/Documents/redo/src/Login.js"],"names":["ReactDOM","React","useState","Form","Icon","Input","Button","Checkbox","Row","Col","LoginForm","props","defaultEmail","defaultPassword","email","setEmail","password","setPassword","isLoggedIn","setIsLoggedIn","getFieldDecorator","getFieldsError","getFieldValue","isFieldTouched","form","hasErrors","fieldsError","Object","keys","some","field","isLoginButtonDisabled","onSubmit","console","log","loginHeader","minWidth","WrappedNormalLoginForm","create","name"],"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","sourcesContent":["// // import Login from 'ant-design-pro/lib/Login';\n// import { Alert, Checkbox} from 'antd';\n// import React from \"react\";\n// // import {\n// //   BrowserRouter as Router,\n// //   Switch,\n// //   Route,\n// //   Link\n// // } from \"react-router-dom\";\n// import ReactDOM from 'react-dom';\n// const { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\n//\n// class LoginDemo extends React.Component {\n// // export default function Login() {\n//   state = {\n//     notice: '',\n//     type: 'tab2',\n//     autoLogin: true,\n//   };\n//   onSubmit = (err, values) => {\n//     console.log('value collected ->', {\n//       ...values,\n//       autoLogin: this.state.autoLogin,\n//     });\n//     if (this.state.type === 'tab1') {\n//       this.setState(\n//         {\n//           notice: '',\n//         },\n//         () => {\n//           if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n//             setTimeout(() => {\n//               this.setState({\n//                 notice: 'The combination of username and password is incorrect!',\n//               });\n//             }, 500);\n//           }\n//         }\n//       );\n//     }\n//   };\n//   onTabChange = key => {\n//     this.setState({\n//       type: key,\n//     });\n//   };\n//   changeAutoLogin = e => {\n//     this.setState({\n//       autoLogin: e.target.checked,\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className=\"login-warp\">\n//         <Login\n//           defaultActiveKey={this.state.type}\n//           onTabChange={this.onTabChange}\n//           onSubmit={this.onSubmit}\n//         >\n//           <Tab key=\"tab1\" tab=\"Account\">\n//             {this.state.notice && (\n//               <Alert\n//                 style={{ marginBottom: 24 }}\n//                 message={this.state.notice}\n//                 type=\"error\"\n//                 showIcon\n//                 closable\n//               />\n//             )}\n//             <UserName name=\"username\" />\n//             <Password name=\"password\" />\n//           </Tab>\n//           <Tab key=\"tab2\" tab=\"Mobile\">\n//             <Mobile name=\"mobile\" />\n//             <Captcha onGetCaptcha={() => console.log('Get captcha!')} name=\"captcha\" />\n//           </Tab>\n//           <div>\n//             <Checkbox checked={this.state.autoLogin} onChange={this.changeAutoLogin}>\n//               Keep me logged in\n//             </Checkbox>\n//             <a style={{ float: 'right' }} href=\"\">\n//               Forgot password\n//             </a>\n//           </div>\n//           <Submit>Login</Submit>\n//           <div>\n//             Other login methods\n//             <span className=\"icon icon-alipay\" />\n//             <span className=\"icon icon-taobao\" />\n//             <span className=\"icon icon-weibo\" />\n//             <a style={{ float: 'right' }} href=\"\">\n//               Register\n//             </a>\n//           </div>\n//         </Login>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<LoginDemo />);\n// export default LoginDemo;\nimport ReactDOM from 'react-dom';\nimport React, { useState } from \"react\";\nimport {Form, Icon, Input, Button, Checkbox, Row, Col } from \"antd\";\n//\n// class NormalLoginForm extends React.Component {\n//   const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldValue,\n//       isFieldTouched\n//   } = props.form;\n//\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         console.log('Received values of form: ', values);\n//       }\n//     });\n//   };\n//   // const {\n//   //     getFieldDecorator,\n//   //     getFieldsError,\n//   //     getFieldValue,\n//   //     isFieldTouched\n//   // } = props.form;\n//\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//         <Form.Item>\n//           {getFieldDecorator('username', {\n//             rules: [{ required: true, message: 'Please input your username!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               placeholder=\"Username\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('password', {\n//             rules: [{ required: true, message: 'Please input your Password!' }],\n//           })(\n//             <Input\n//               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//               type=\"password\"\n//               placeholder=\"Password\"\n//             />,\n//           )}\n//         </Form.Item>\n//         <Form.Item>\n//           {getFieldDecorator('remember', {\n//             valuePropName: 'checked',\n//             initialValue: true,\n//           })(<Checkbox>Remember me</Checkbox>)}\n//           <a className=\"login-form-forgot\" href=\"\">\n//             Forgot password\n//           </a>\n//           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//             Log in\n//           </Button>\n//           Or <a href=\"\">register now!</a>\n//         </Form.Item>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n//\n// // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// export default NormalLoginForm;\n// //\nconst LoginForm = props => {\n  const defaultEmail = \"\";\n  const defaultPassword = \"\";\n  const [email, setEmail] = useState(defaultEmail);\n  const [password, setPassword] = useState(defaultPassword);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const {\n    getFieldDecorator,\n    getFieldsError,\n    getFieldValue,\n    isFieldTouched\n  } = props.form;\n\n  function hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\n  const isLoginButtonDisabled =\n    hasErrors(getFieldsError()) ||\n    !isFieldTouched(\"email\") ||\n    !isFieldTouched(\"password\");\n\n  const onSubmit = (email, password) => {\n    setEmail(email);\n    setPassword(password);\n    setIsLoggedIn(true);\n    console.log(email, password, isLoggedIn);\n  };\n\n  const loginHeader = isLoggedIn ? (\n    <h1 className=\"title\">Welcome Back</h1>\n  ) : (\n    <h1 className=\"title\">Log In/Sign Up Page</h1>\n  );\n\n  return (\n    <div>\n      <style jsx={true}>{`\n        .title {\n          font-size: 50px;\n          letter-spacing: normal;\n          color: rgba(0, 0, 0, 0.85);\n          margin: auto;\n          text-align: center;\n        }\n      `}</style>\n      <Row type=\"flex\" justify=\"center\">\n        <Col span={4} style={{ minWidth: \"320px\" }}>\n        <div>helllo</div>\n        </Col>\n        <Col span={4} style={{ minWidth: \"320px\" }}>\n        <div>helllo2</div>\n        </Col>\n\n      </Row>\n      </div>\n      // <Row type=\"flex\" justify=\"center\">\n      //   <Col span={4} style={{ minWidth: \"320px\" }}>\n      //     <br />\n          // <br />\n          // <br />\n          // <br />\n          // <br />\n          // <div className=\"title\">{loginHeader}</div>\n          // <br />\n          // <br />\n          // <Form\n          //   // {...formProps}\n          //   // className=\"login-form\"\n          //   // layout={\"\"}\n          //   // tslint:disable-next-line jsx-no-lambda\n          //   onSubmit={evt => {\n          //     if (!isLoginButtonDisabled) {\n          //       // setLoading(true);\n          //       evt.preventDefault();\n          //       onSubmit(email, password);\n          //     }\n          //   }}\n          // >\n          //   <Form.Item label=\"Username\">\n          //     {getFieldDecorator(\"username\", {\n          //       rules: [\n          //         {\n          //           required: true,\n          //           message: \"username\"\n          //         }\n          //         // ,{\n          //         //   type: \"username\",\n          //         //   message: \"The input is not valid email!\"\n          //         // }\n          //       ]\n          //       // initialValue: defaultEmail\n          //     })(\n          //       <Input\n          //\n          //         placeholder=\"username\"\n          //         size=\"large\"\n          //         // onChange={handleEmailChange}\n          //       />\n          //     )}\n          //   </Form.Item>\n          //   <Form.Item label=\"Password\">\n          //     {getFieldDecorator(\"password\", {\n          //       rules: [\n          //         {\n          //           required: true,\n          //           message: \"password\"\n          //         }\n          //       ]\n          //       // initialValue: defaultPassword\n          //     })(\n          //       <Input\n          //\n          //         type=\"password\"\n          //         placeholder=\"Password\"\n          //         size=\"large\"\n          //         // onChange={handlePasswordChange}\n          //       />\n          //     )}\n          //   </Form.Item>\n          //   <br />\n          //   <Form.Item>\n          //     <Button\n          //       type=\"primary\"\n          //       htmlType=\"submit\"\n          //       disabled={\n          //         hasErrors(getFieldsError()) ||\n          //         !isFieldTouched(\"username\") ||\n          //         !isFieldTouched(\"password\")\n          //       }\n          //       block={true}\n          //       // loading={loading}\n          //       size={\"large\"}\n          //       // tslint:disable-next-line jsx-no-lambda\n          //       onClick={evt => {\n          //         // setLoading(true);\n          //         evt.preventDefault();\n          //         // onSubmit(email, password);\n          //         onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n          //       }}\n          //     >\n          //       Log in\n          //     </Button>\n          //   </Form.Item>\n          // </Form>\n      //     </Col>\n      // </Row>\n      // {/* <Link to=\"/register\">Sign Up</ Link>\n    //  {/* <br />\n    //  <br />\n  //    Or <a href=\"/register\">register now!</a> */}\n  //  </div>\n  );\n};\n\nconst WrappedNormalLoginForm = Form.create({ name: \"login\" })(LoginForm);\n//\nexport default WrappedNormalLoginForm;\n"]},"metadata":{},"sourceType":"module"}