{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Form, Input, Button, Row, Col, Icon } from \"antd\";\n//\n// const LoginForm = props => {\n//   const defaultEmail = \"\";\n//   const defaultPassword = \"\";\n//   const [email, setEmail] = useState(defaultEmail);\n//   const [password, setPassword] = useState(defaultPassword);\n//\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//\n//   const {\n//     getFieldDecorator,\n//     getFieldsError,\n//     getFieldValue,\n//     isFieldTouched\n//   } = props.form;\n//\n//   function hasErrors(fieldsError) {\n//     return Object.keys(fieldsError).some(field => fieldsError[field]);\n//   }\n//\n//   const isLoginButtonDisabled =\n//     hasErrors(getFieldsError()) ||\n//     !isFieldTouched(\"email\") ||\n//     !isFieldTouched(\"password\");\n//\n//   const onSubmit = (email, password) => {\n//     setEmail(email);\n//     setPassword(password);\n//     setIsLoggedIn(true);\n//     console.log(email, password, isLoggedIn);\n//   };\n//\n//   const loginHeader = isLoggedIn ? (\n//     <h1 className=\"title\">You Logged In</h1>\n//   ) : (\n//     <h1 className=\"title\">Please Log In</h1>\n//   );\n//\n//   return (\n//     <div>\n//       <style jsx={true}>{`\n//         .title {\n//           font-family: Roboto;\n//           font-size: 38px;\n//           font-weight: bold;\n//           font-style: normal;\n//           font-stretch: normal;\n//           line-height: 1.42;\n//           letter-spacing: normal;\n//           color: rgba(0, 0, 0, 0.85);\n//           margin: auto;\n//           text-align: center;\n//         }\n//       `}</style>\n//       <Row type=\"flex\" justify=\"center\">\n//         <Col span={4} style={{ minWidth: \"320px\" }}>\n//           <br />\n//           <br />\n//           <br />\n//           <br />\n//           <br />\n//           <div className=\"title\">{loginHeader}</div>\n//           <br />\n//           <br />\n//           <Form\n//             // {...formProps}\n//             // className=\"login-form\"\n//             layout={\"vertical\"}\n//             // tslint:disable-next-line jsx-no-lambda\n//             onSubmit={evt => {\n//               if (!isLoginButtonDisabled) {\n//                 // setLoading(true);\n//                 evt.preventDefault();\n//                 onSubmit(email, password);\n//               }\n//             }}\n//           >\n//             <Form.Item label=\"Email\">\n//               {getFieldDecorator(\"email\", {\n//                 rules: [\n//                   {\n//                     required: true,\n//                     message: \"Please input your email!\"\n//                   },\n//                   {\n//                     type: \"email\",\n//                     message: \"The input is not valid email!\"\n//                   }\n//                 ]\n//                 // initialValue: defaultEmail\n//               })(\n//                 <Input\n//                   prefix={\n//                     <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n//                   }\n//                   placeholder=\"Email\"\n//                   size=\"large\"\n//                   // onChange={handleEmailChange}\n//                 />\n//               )}\n//             </Form.Item>\n//             <Form.Item label=\"Password\">\n//               {getFieldDecorator(\"password\", {\n//                 rules: [\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\"\n//                   }\n//                 ]\n//                 // initialValue: defaultPassword\n//               })(\n//                 <Input\n//                   prefix={\n//                     <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n//                   }\n//                   type=\"password\"\n//                   placeholder=\"Password\"\n//                   size=\"large\"\n//                   // onChange={handlePasswordChange}\n//                 />\n//               )}\n//             </Form.Item>\n//             <br />\n//             <Form.Item>\n//               <Button\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 disabled={\n//                   hasErrors(getFieldsError()) ||\n//                   !isFieldTouched(\"email\") ||\n//                   !isFieldTouched(\"password\")\n//                 }\n//                 block={true}\n//                 // loading={loading}\n//                 size={\"large\"}\n//                 // tslint:disable-next-line jsx-no-lambda\n//                 onClick={evt => {\n//                   // setLoading(true);\n//                   evt.preventDefault();\n//                   // onSubmit(email, password);\n//                   onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n//                 }}\n//               >\n//                 Log in\n//               </Button>\n//             </Form.Item>\n//           </Form>\n//         </Col>\n//       </Row>\n//       {/* <Link to=\"/register\">Sign Up</ Link>\n//       {/* <br />\n//       <br />\n//       Or <a href=\"/register\">register now!</a> */}\n//     </div>\n//   );\n// };\n//\n// const WrappedLoginForm = Form.create({ name: \"login\" })(LoginForm);\n//\n// export default WrappedLoginForm;\n// // import React , {Component} from 'react';\n// // // // import logo from './logo.svg';\n// // import ReactDOM from 'react-dom';\n// // // // import './App.css';\n// // //\n// // // export default function Login(){\n// // //   return (\n// // //     <nav1>\n// // //       <h2>Login</h2>\n// // //       <ui>\n// // //         <li>username</li>\n// // //         <li>passwrd</li>\n// // //       </ui>\n// // //     </nav1>\n// // //     // <div className=\"List\">\n// // //     //   <h1>hey2</h1>\n// // //     // </div>\n// // //   )\n// // //\n// // //\n// // // }\n// // import { Form, Icon, Input, Button, Checkbox } from 'antd';\n// //\n// // class NormalLoginForm extends React.Component {\n// //   handleSubmit = e => {\n// //     e.preventDefault();\n// //     this.props.form.validateFields((err, values) => {\n// //       if (!err) {\n// //         console.log('Received values of form: ', values);\n// //       }\n// //     });\n// //   };\n// //\n// //   render() {\n// //     const { getFieldDecorator } = this.props.form;\n// //     return (\n// //       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n// //         <Form.Item>\n// //           {getFieldDecorator('username', {\n// //             rules: [{ required: true, message: 'Please input your username!' }],\n// //           })(\n// //             <Input\n// //               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n// //               placeholder=\"Username\"\n// //             />,\n// //           )}\n// //         </Form.Item>\n// //         <Form.Item>\n// //           {getFieldDecorator('password', {\n// //             rules: [{ required: true, message: 'Please input your Password!' }],\n// //           })(\n// //             <Input\n// //               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n// //               type=\"password\"\n// //               placeholder=\"Password\"\n// //             />,\n// //           )}\n// //         </Form.Item>\n// //         <Form.Item>\n// //           {getFieldDecorator('remember', {\n// //             valuePropName: 'checked',\n// //             initialValue: true,\n// //           })(<Checkbox>Remember me</Checkbox>)}\n// //           <a className=\"login-form-forgot\" href=\"\">\n// //             Forgot password\n// //           </a>\n// //           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n// //             Log in\n// //           </Button>\n// //           Or <a href=\"\">register now!</a>\n// //         </Form.Item>\n// //       </Form>\n// //     );\n// //   }\n// // }\n// //\n// // const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n// //\n// // // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// // export default NormalLoginForm;","map":{"version":3,"sources":["/Users/themislee/Documents/redo/src/Login.js"],"names":[],"mappingssourcesContent":["\n\n// import React, { useState } from \"react\";\n// import { Form, Input, Button, Row, Col, Icon } from \"antd\";\n//\n// const LoginForm = props => {\n//   const defaultEmail = \"\";\n//   const defaultPassword = \"\";\n//   const [email, setEmail] = useState(defaultEmail);\n//   const [password, setPassword] = useState(defaultPassword);\n//\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//\n//   const {\n//     getFieldDecorator,\n//     getFieldsError,\n//     getFieldValue,\n//     isFieldTouched\n//   } = props.form;\n//\n//   function hasErrors(fieldsError) {\n//     return Object.keys(fieldsError).some(field => fieldsError[field]);\n//   }\n//\n//   const isLoginButtonDisabled =\n//     hasErrors(getFieldsError()) ||\n//     !isFieldTouched(\"email\") ||\n//     !isFieldTouched(\"password\");\n//\n//   const onSubmit = (email, password) => {\n//     setEmail(email);\n//     setPassword(password);\n//     setIsLoggedIn(true);\n//     console.log(email, password, isLoggedIn);\n//   };\n//\n//   const loginHeader = isLoggedIn ? (\n//     <h1 className=\"title\">You Logged In</h1>\n//   ) : (\n//     <h1 className=\"title\">Please Log In</h1>\n//   );\n//\n//   return (\n//     <div>\n//       <style jsx={true}>{`\n//         .title {\n//           font-family: Roboto;\n//           font-size: 38px;\n//           font-weight: bold;\n//           font-style: normal;\n//           font-stretch: normal;\n//           line-height: 1.42;\n//           letter-spacing: normal;\n//           color: rgba(0, 0, 0, 0.85);\n//           margin: auto;\n//           text-align: center;\n//         }\n//       `}</style>\n//       <Row type=\"flex\" justify=\"center\">\n//         <Col span={4} style={{ minWidth: \"320px\" }}>\n//           <br />\n//           <br />\n//           <br />\n//           <br />\n//           <br />\n//           <div className=\"title\">{loginHeader}</div>\n//           <br />\n//           <br />\n//           <Form\n//             // {...formProps}\n//             // className=\"login-form\"\n//             layout={\"vertical\"}\n//             // tslint:disable-next-line jsx-no-lambda\n//             onSubmit={evt => {\n//               if (!isLoginButtonDisabled) {\n//                 // setLoading(true);\n//                 evt.preventDefault();\n//                 onSubmit(email, password);\n//               }\n//             }}\n//           >\n//             <Form.Item label=\"Email\">\n//               {getFieldDecorator(\"email\", {\n//                 rules: [\n//                   {\n//                     required: true,\n//                     message: \"Please input your email!\"\n//                   },\n//                   {\n//                     type: \"email\",\n//                     message: \"The input is not valid email!\"\n//                   }\n//                 ]\n//                 // initialValue: defaultEmail\n//               })(\n//                 <Input\n//                   prefix={\n//                     <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n//                   }\n//                   placeholder=\"Email\"\n//                   size=\"large\"\n//                   // onChange={handleEmailChange}\n//                 />\n//               )}\n//             </Form.Item>\n//             <Form.Item label=\"Password\">\n//               {getFieldDecorator(\"password\", {\n//                 rules: [\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\"\n//                   }\n//                 ]\n//                 // initialValue: defaultPassword\n//               })(\n//                 <Input\n//                   prefix={\n//                     <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n//                   }\n//                   type=\"password\"\n//                   placeholder=\"Password\"\n//                   size=\"large\"\n//                   // onChange={handlePasswordChange}\n//                 />\n//               )}\n//             </Form.Item>\n//             <br />\n//             <Form.Item>\n//               <Button\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 disabled={\n//                   hasErrors(getFieldsError()) ||\n//                   !isFieldTouched(\"email\") ||\n//                   !isFieldTouched(\"password\")\n//                 }\n//                 block={true}\n//                 // loading={loading}\n//                 size={\"large\"}\n//                 // tslint:disable-next-line jsx-no-lambda\n//                 onClick={evt => {\n//                   // setLoading(true);\n//                   evt.preventDefault();\n//                   // onSubmit(email, password);\n//                   onSubmit(getFieldValue(\"email\"), getFieldValue(\"password\"));\n//                 }}\n//               >\n//                 Log in\n//               </Button>\n//             </Form.Item>\n//           </Form>\n//         </Col>\n//       </Row>\n//       {/* <Link to=\"/register\">Sign Up</ Link>\n//       {/* <br />\n//       <br />\n//       Or <a href=\"/register\">register now!</a> */}\n//     </div>\n//   );\n// };\n//\n// const WrappedLoginForm = Form.create({ name: \"login\" })(LoginForm);\n//\n// export default WrappedLoginForm;\n// // import React , {Component} from 'react';\n// // // // import logo from './logo.svg';\n// // import ReactDOM from 'react-dom';\n// // // // import './App.css';\n// // //\n// // // export default function Login(){\n// // //   return (\n// // //     <nav1>\n// // //       <h2>Login</h2>\n// // //       <ui>\n// // //         <li>username</li>\n// // //         <li>passwrd</li>\n// // //       </ui>\n// // //     </nav1>\n// // //     // <div className=\"List\">\n// // //     //   <h1>hey2</h1>\n// // //     // </div>\n// // //   )\n// // //\n// // //\n// // // }\n// // import { Form, Icon, Input, Button, Checkbox } from 'antd';\n// //\n// // class NormalLoginForm extends React.Component {\n// //   handleSubmit = e => {\n// //     e.preventDefault();\n// //     this.props.form.validateFields((err, values) => {\n// //       if (!err) {\n// //         console.log('Received values of form: ', values);\n// //       }\n// //     });\n// //   };\n// //\n// //   render() {\n// //     const { getFieldDecorator } = this.props.form;\n// //     return (\n// //       <Form onSubmit={this.handleSubmit} className=\"login-form\">\n// //         <Form.Item>\n// //           {getFieldDecorator('username', {\n// //             rules: [{ required: true, message: 'Please input your username!' }],\n// //           })(\n// //             <Input\n// //               prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n// //               placeholder=\"Username\"\n// //             />,\n// //           )}\n// //         </Form.Item>\n// //         <Form.Item>\n// //           {getFieldDecorator('password', {\n// //             rules: [{ required: true, message: 'Please input your Password!' }],\n// //           })(\n// //             <Input\n// //               prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n// //               type=\"password\"\n// //               placeholder=\"Password\"\n// //             />,\n// //           )}\n// //         </Form.Item>\n// //         <Form.Item>\n// //           {getFieldDecorator('remember', {\n// //             valuePropName: 'checked',\n// //             initialValue: true,\n// //           })(<Checkbox>Remember me</Checkbox>)}\n// //           <a className=\"login-form-forgot\" href=\"\">\n// //             Forgot password\n// //           </a>\n// //           <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n// //             Log in\n// //           </Button>\n// //           Or <a href=\"\">register now!</a>\n// //         </Form.Item>\n// //       </Form>\n// //     );\n// //   }\n// // }\n// //\n// // const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n// //\n// // // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// // export default NormalLoginForm;\n"]},"metadata":{},"sourceType":"module"}